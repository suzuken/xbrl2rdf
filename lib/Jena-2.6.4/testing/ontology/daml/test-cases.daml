<!-- $Id: test-cases.daml,v 1.4 2004/12/07 17:40:33 ian_dickinson Exp $ -->

<rdf:RDF
  xmlns:rdf ="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:daml="http://www.daml.org/2001/03/daml+oil#"
  xmlns     ="http://dickinson-i-4/daml/tests/test-cases.daml#"
  xml:base  ="http://dickinson-i-4/daml/tests/test-cases.daml"
>

<daml:Ontology rdf:about="">
  <daml:versionInfo>$Id: test-cases.daml,v 1.4 2004/12/07 17:40:33 ian_dickinson Exp $</daml:versionInfo>
  <rdfs:comment>
    An ontology that will allow me to test the rdf:type code in the DAML API
  </rdfs:comment>
  <daml:imports rdf:resource="http://www.daml.org/2001/03/daml+oil"/>
</daml:Ontology>

<daml:Class rdf:ID="Animal">
  <!-- rdfs:subClassOf rdf:resource="http://www.daml.org/2001/03/daml+oil#Thing" / -->
</daml:Class>

<daml:Class rdf:ID="Vertebrate">
  <rdfs:subClassOf rdf:resource="#Animal" />
</daml:Class>

<daml:Class rdf:ID="Mammal">
  <rdfs:subClassOf rdf:resource="#Vertebrate" />
</daml:Class>

<daml:Class rdf:ID="Dog">
  <rdfs:subClassOf rdf:resource="#Mammal" />
</daml:Class>

<daml:Class rdf:ID="Pet">
  <rdfs:subClassOf rdf:resource="#Companion" />
</daml:Class>

<Dog rdf:ID="fido" />
<Pet rdf:about="http://dickinson-i-4/daml/tests/test-cases.daml#fido" />

<!-- a circular definition ... allowed in DAML, but not in RDFS -->

<daml:Class rdf:ID="A">
  <rdfs:subClassOf rdf:resource="#B" />
</daml:Class>

<daml:Class rdf:ID="B">
  <rdfs:subClassOf rdf:resource="#A" />
</daml:Class>

<A rdf:ID="ab" />

<daml:UnambiguousProperty rdf:ID="queen-of" />

<!-- A set of equivalence relations -->
<daml:Class rdf:ID="X" />

<X rdf:ID="x0">
   <daml:equivalentTo rdf:resource="#x1" />
</X>

<X rdf:ID="x1">
</X>

<X rdf:ID="x2">
   <daml:equivalentTo rdf:resource="#x1" />
   <daml:equivalentTo rdf:resource="#x3" />
</X>

<X rdf:ID="x3">
</X>

<X rdf:ID="x4">
</X>

<daml:Class rdf:ID="C0">
    <daml:sameClassAs rdf:resource="#C1" />
</daml:Class>

<daml:Class rdf:ID="C1">
</daml:Class>

<daml:Class rdf:ID="C2">
    <daml:sameClassAs rdf:resource="#C3" />
</daml:Class>

<daml:Class rdf:ID="C3">
    <daml:sameClassAs rdf:resource="#C1" />
    <daml:sameClassAs rdf:resource="#C2" />
</daml:Class>

<daml:Property rdf:ID="p0">
    <daml:samePropertyAs rdf:resource="#p1" />
</daml:Property>

<daml:Property rdf:ID="p1">
</daml:Property>

<daml:Property rdf:ID="p2">
    <daml:samePropertyAs rdf:resource="#p3" />
</daml:Property>

<daml:Property rdf:ID="p3">
    <daml:samePropertyAs rdf:resource="#p1" />
</daml:Property>

<!-- Test that daml aliases are recognised as their rdf equivalents -->
<rdf:Description rdf:ID="CDaml">
    <daml:type rdf:resource="http://www.daml.org/2001/03/daml+oil#Class" />
</rdf:Description>

<!-- Test that two equivalent classes are recognised in determining types -->
<!-- d1 should match 'd1 rdf:type D0.'                                    -->
<daml:Class rdf:ID="D0">
    <daml:sameClassAs rdf:resource="#D1" />
</daml:Class>

<daml:Class rdf:ID="D1">
</daml:Class>

<D1 rdf:ID="d1" />

<!-- Now create a statement 'd2 pd0 d1', where pd0 and pd1 are equiv, so -->
<!-- that 'd2 pd1 d1' should also be true                                -->
<daml:Property rdf:ID="pd0" />
<daml:Property rdf:ID="pd1">
    <daml:samePropertyAs rdf:resource="#pd0" />
</daml:Property>

<D1 rdf:ID="d2">
    <pd0 rdf:resource="#d1" />
</D1>

<!-- testing sub-property relationships for user-defined properties        -->
<!-- 'd2 pd3 d1' implies that 'd2 pd2 d1' since pd2 is a super-prop of pd3 -->
<daml:Property rdf:ID="pd2" />
<daml:Property rdf:ID="pd3">
    <rdfs:subPropertyOf rdf:resource="#pd2" />
</daml:Property>

<D1 rdf:about="http://dickinson-i-4/daml/tests/test-cases.daml#d2">
    <pd3 rdf:resource="#d1" />
</D1>

<!-- test that daml:subClassOf is processed as rdfs:subClassOf -->
<daml:Class rdf:ID="SubClassBug0">
</daml:Class>
<daml:Class rdf:ID="SubClassBug1">
    <rdfs:subClassOf rdf:resource="#SubClassBug0" />
</daml:Class>

<!-- test cases for determining the defined properties of a class -->
<daml:Class rdf:ID="DefProp0">
</daml:Class>

<daml:Class rdf:ID="DefProp1">
    <rdfs:subClassOf rdf:resource="#DefProp0" />
</daml:Class>

<daml:Class rdf:ID="DefProp2">
    <rdfs:subClassOf rdf:resource="#DefProp1" />
</daml:Class>

<daml:Property rdf:ID="prop0">
    <rdfs:domain rdf:resource="#DefProp0" />
</daml:Property>

<daml:Property rdf:ID="prop2">
    <rdfs:domain rdf:resource="#DefProp2" />
</daml:Property>

<!-- Bug reported by Thorsten Liebig -->
<daml:Class rdf:ID="tl_x" />
<daml:Class rdf:ID="tl_y" />
<daml:Class rdf:ID="tl_one">
     <daml:subClassOf rdf:resource="#tl_x" />
     <rdfs:subClassOf rdf:resource="#tl_y" />
</daml:Class>

<!-- Check that getAll(false) on subClassOf is being interpreted correctly -->
<daml:Class rdf:ID="subClassCheck1" />
<daml:Class rdf:ID="subClassCheck2">
    <rdfs:subClassOf rdf:resource="#subClassCheck1" />
</daml:Class>
<daml:Class rdf:ID="subClassCheck3">
    <rdfs:subClassOf rdf:resource="#subClassCheck2" />
</daml:Class>

<!-- Test turning on and off equivalence processing - see above for defn of x1 -->
<daml:Property rdf:ID="q" />
<X rdf:ID="qX">
    <q rdf:resource="#x1" />
</X>

<!-- Bug report by Andrei S. Lopatenko [andrei@derpi.tuwien.ac.at] -->
<!-- superclasses of class not respecting daml:subClassOf -->
<daml:Class rdf:ID="Person" />

<daml:Class rdf:ID="TallThing" />

<daml:Class rdf:ID="Researcher">
   <daml:subClassOf rdf:resource="#Person"/>
   <rdfs:subClassOf rdf:resource="#TallThing"/>
</daml:Class>

<!-- Bug report by Thorsten Liebig -->

<daml:Class rdf:ID="TL_Class1"/>
<daml:Class rdf:ID="TL_Class2"/>
<daml:Class rdf:ID="TL_Class3"/>
<daml:Class rdf:ID="TL_Class4"/>

<daml:ObjectProperty rdf:ID="TL_PropertyTest">
   <rdfs:domain rdf:resource="#Class1"/>
   <rdfs:range rdf:resource="#Class2"/>
   <daml:domain rdf:resource="#Class3"/>
   <daml:range rdf:resource="#Class4"/>
</daml:ObjectProperty>

<!-- bug report by Wesley Bille -->
<!-- note rdfs:Class, rather than daml:Class -->
<rdfs:Class rdf:ID="HumanBody">
    <daml:unionOf rdf:parseType="daml:collection">
        <daml:Thing rdf:ID="ObjectOne"/>
        <daml:Thing rdf:ID="ObjectTwo"/>
    </daml:unionOf>
</rdfs:Class>


</rdf:RDF>
